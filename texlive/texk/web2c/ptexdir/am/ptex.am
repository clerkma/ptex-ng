## $Id: ptex.am 70222 2024-02-28 04:19:31Z kakuto $
## texk/web2c/ptexdir/am/ptex.am: Makefile fragment for pTeX.
##
## Copyright 2015-2024 Karl Berry <tex-live@tug.org>
## Copyright 2010-2015 Peter Breitenlohner <tex-live@tug.org>
## You may freely use, modify and/or distribute this file.

ptex_cppflags = $(PTEXENC_INCLUDES) $(AM_CPPFLAGS) $(ZLIB_INCLUDES)
ptex_ldadd = libkanji.a $(pproglib) $(PTEXENC_LIBS) $(LDADD) $(ZLIB_LIBS)
ptex_dependencies = libkanji.a $(pproglib) $(PTEXENC_DEPEND) $(ZLIB_DEPEND) $(default_dependencies)
p_tangle = $(tangle_silent)WEBINPUTS=.:$(srcdir)/ptexdir:$(srcdir) $(buildenv) $(TANGLE)


## pTeX library
##
pproglib = lib/libp.a
# Rebuild $(pproglib)
$(pproglib): $(KPATHSEA_DEPEND) ${srcdir}/lib/*.c
	cd lib && $(MAKE) $(AM_MAKEFLAGS) libp.a

## libkanji.a for pTeX and e-pTeX
##
EXTRA_LIBRARIES += libkanji.a
libkanji_a_SOURCES = ptexdir/kanji.c ptexdir/kanji.h ptexdir/kanji_dump.c
libkanji_a_CPPFLAGS = $(ptex_cppflags)

## pTeX
##
if PTEX
bin_PROGRAMS += ptex
endif PTEX
#if PWEB
#bin_PROGRAMS += $(pweb_programs)
#endif PWEB
#EXTRA_PROGRAMS += ptex $(pweb_programs)

ptex_CPPFLAGS = $(ptex_cppflags)

# With --enable-ipc, pTeX may need to link with -lsocket.
ptex_LDADD = $(ptex_ldadd) $(ipc_socketlibs)
ptex_DEPENDENCIES = $(ptex_dependencies)

# pTeX C sources
ptex_c_h = ptexini.c ptex0.c ptexcoerce.h ptexd.h
nodist_ptex_SOURCES = $(ptex_c_h) ptex-pool.c
dist_ptex_SOURCES = ptexdir/ptexextra.c ptexdir/ptexextra.h ptexdir/ptex_version.h

# We must create ptexd.h and ptexdir/ptex_version.h before building the ptex_OBJECTS.
ptex_prereq = ptexd.h ptexdir/ptex_version.h
$(ptex_OBJECTS): $(ptex_prereq)

$(ptex_c_h): ptex-web2c
	@$(web2c) ptex
ptex-web2c: ptex.p $(web2c_texmf) ptexdir/ptex.defines
	@$(web2c) ptex

ptex-pool.c: ptex.pool ptexd.h $(makecpool_stamp)
	$(makecpool) ptex >$@ || rm -f $@

# Tangling pTeX
ptex.p ptex.pool: ptex-tangle
	$(texmf_tangle) ptex ptex
ptex-tangle: tangle$(EXEEXT) ptex.web ptex.ch tangle-sh
	$(texmf_tangle) ptex ptex

# Extract ptex version
$(srcdir)/ptexdir/ptex_version.h: @MAINTAINER_MODE_TRUE@ ptexdir/ptex-base.ch
	$(AM_V_GEN)grep '^@d pTeX_version_string==' $(srcdir)/ptexdir/ptex-base.ch \
	  | sed "s/^.*'-/#define PTEX_VERSION \"/;s/'.*$$/\"/" >$@

# Generate ptex.web
ptex.web: tie$(EXEEXT) $(ptex_web_srcs)
	$(tie_m) $(ptex_web_srcs)
ptex_web_srcs = \
	tex.web \
	tex.ch \
	tracingstacklevels.ch \
	partoken.ch \
	locnull-optimize.ch \
	zlib-fmt.ch

# Generate ptex.ch
ptex.ch: tie$(EXEEXT) ptex.web $(ptex_ch_srcs)
	$(tie_c) ptex.web $(ptex_ch_srcs)
ptex_ch_srcs = \
	ptexdir/ptex-base.ch \
	unbalanced-braces.ch \
	$(ptex_ch_synctex) \
	tex-binpool.ch

EXTRA_DIST += $(ptex_web_srcs) $(ptex_ch_srcs) ptexdir/ptex.defines

DISTCLEANFILES += $(nodist_ptex_SOURCES) ptex.web ptex.ch ptex-web2c \
	ptex.p ptex.pool ptex-tangle

##
EXTRA_DIST += \
	ptexdir/COPYRIGHT \
	ptexdir/COPYRIGHT.jis \
	ptexdir/ChangeLog \
	ptexdir/Changes.txt \
	ptexdir/INSTALL.txt \
	ptexdir/README.txt

# pTeX Tests
#
ptex_tests = \
	ptexdir/ptriptest.test \
	ptexdir/pver.test \
	ptexdir/wcfname.test
ptexdir/ptriptest.log: ptex$(EXEEXT) dvitype$(EXEEXT) pltotf$(EXEEXT) tftopl$(EXEEXT)
ptexdir/pver.log ptexdir/wcfname.log: ptex$(EXEEXT)

EXTRA_DIST += $(ptex_tests) $(pweb_tests)
DISTCLEANFILES += $(pweb_programs:=.c) $(pweb_programs:=.h) \
	$(pweb_programs:=.p) $(pweb_programs:=-web2c) $(pweb_programs:=.web)

if PTEX
TESTS += $(ptex_tests)
TRIPTRAP += ptrip.diffs
TRIPTRAP_CLEAN += ptrip-clean
endif PTEX
if PWEB
TESTS += $(pweb_tests)
endif PWEB

## Test data and results
##
## ptexdir/nissya.test
EXTRA_DIST += ptexdir/tests/nissya.bst ptexdir/tests/sample.bib
DISTCLEANFILES += ptests/nissya_bib.*
## ptexdir/pbibtex.test
EXTRA_DIST += tests/testfield.bst \
	tests/enc-asc.bib tests/enc-jis.bib tests/enc-sjis.bib \
	tests/enc-euc.bib tests/enc-utf8.bib \
	tests/enc-utf8a.bib tests/enc-utf8b.bib \
	tests/enc-amb0.bib tests/enc-amb1.bib tests/enc-amb2.bib \
	tests/enc.aux tests/enc-e.aux tests/enc-s.aux tests/enc-u.aux \
	tests/enc-p.bbl tests/enc-ep.bbl tests/enc-sp.bbl tests/enc-up.bbl
DISTCLEANFILES += ptests/xexampl.aux ptests/xexampl.bbl ptests/xexampl.blg \
	ptests/xenc*.* ptests/fn*.*
## ptexdir/pbibtex-mem.test
EXTRA_DIST += tests/memdata1.bst tests/memdata2.bst tests/memdata3.bst
DISTCLEANFILES += ptests/memtest.bib ptests/memtest?.*
## ptexdir/pdvitype.test
EXTRA_DIST += ptexdir/tests/ptex3.tex ptexdir/tests/ptex3.dvi \
	ptexdir/tests/ptex4.tex ptexdir/tests/ptex4.dvi \
	ptexdir/tests/ptex3a-jis.typ ptexdir/tests/ptex3a-utf8.typ \
	ptexdir/tests/ptex4a-jis.typ ptexdir/tests/ptex4a-utf8.typ
DISTCLEANFILES += ptests/xstory.dvityp ptests/xpagenum.typ ptests/xptex[34]*.typ
## ptexdir/ppltotf.test
DISTCLEANFILES += ptests/xcmr10.tfm
## ptexdir/ptftopl.test
DISTCLEANFILES += ptests/xcmr10.pl
## ptexdir/sample.test
EXTRA_DIST += ptexdir/tests/goth10.tfm ptexdir/tests/sample.dvi ptexdir/tests/samplea.typ
DISTCLEANFILES += ptests/xsample*.typ
## ptexdir/yokotate.test
EXTRA_DIST += ptexdir/tests/min10.pl ptexdir/tests/min10.tfm
EXTRA_DIST += ptexdir/tests/tmin10.pl ptexdir/tests/tmin10.tfm
EXTRA_DIST += ptexdir/tests/chcode.pl ptexdir/tests/chcode-jis.pl ptexdir/tests/chcode.tfm \
	ptexdir/tests/chcode-utf8.pl ptexdir/tests/chcode-euc.pl ptexdir/tests/chcode-sjis.pl
DISTCLEANFILES += ptests/x*min10.* ptests/xchcode*.*
## ptexdir/skipjfmp.test
EXTRA_DIST += ptexdir/tests/skipjfmp.pl ptexdir/tests/skipjfmp.tfm
DISTCLEANFILES += ptests/xskipjfmp.*
## ptexdir/ptriptest
EXTRA_DIST += ptexdir/ptrip/ptrip.diffs ptexdir/ptrip/texmf.cnf
ptrip.diffs: ptex$(EXEEXT) dvitype$(EXEEXT) pltotf$(EXEEXT) tftopl$(EXEEXT)
	$(triptrap_diffs) $@
.PHONY: ptrip-clean
ptrip-clean:
	rm -rf ptripdir

DISTCLEANFILES += ptrip.diffs

# (end of ptex.am)
